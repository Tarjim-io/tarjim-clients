## Instructions
Setup tarjim in cake before react

### Setup:
1. install i18n-js `npm install i18n-js`
2. install lodash `npm install lodash`
3. install isomorphic-dompurify `npm i isomorphic-dompurify`
4. clone into src/services 
```
cd src/services
git submodule add git@bitbucket.org:joylab/tarjim_clients.git 
```
5. delete src/services/LocalizationService if it exists
6. add symlink in root project dir for update_locale.php run 
```
ln  -s src/services/tarjim_clients/react/update_locale.php
```
7. update import statements for LocalizationService
```
find ./src -type f -exec sed -i 's/services\/LocalizationService/services\/tarjim_clients\/react/g' {} \;
```
8. add to setup_environment script 
```
git submodule update --init --recursive src/services/tarjim_clients
git submodule update --remote --merge src/services/tarjim_clients
php update_locale.php
```

9. edit project_id in update_locale.php
10. run update_locale.php `php update_locale.php`
11. in App.js: 	
	* import { LocalizationProvider } from 'services/tarjim_clients/react';
	* add <LocalizationService> as parent tag
12. add to the url params for all api calls skip_get_translations=1

### Usage:
```
import React, { useContext } from 'react';
import { LocalizationContext } from 'services/tarjim_clients/react';
```
* Transalte: 
```		
const { __T } = useContext(LocalizationContext);
```
* Change lang:
```
const { setTranslation } = useContext(LocalizationContext);
setTranslation(language);
```
* Get current lang: 
```
const { getCurrentLocale } = useContext(LocalizationContext);
```

### To use variables in translation value
* In tarjim.io add the variables you want as %%variable_name%%
* In react pass the key as an array
```
key = [
	'key' => 'tarjim_key',
	'mappings' => [
		'var1' => 'var1 value',
	]
]
```
* If the mapping array contains nested arrays ex:
```
key = [
	'key' => 'tarjim_key',
	'mappings' => [
		'subkey1' => [
			'var1' => 'var1 value',
		],
		'subkey2' => [
			'var1' => 'var1 value',
		],
	]
]
```

	pass subkey in react in config ex:
```
__T(key, {subkey: 'subkey1'})
```

* Important note
you might need to camelize the subkey before using it in __T()

## Important notes
1. in index.js
	* Change translationKeys, supportedLanguages, translations with your projects available languages
	* In translationKeys var change 'react' to your projects's namespace
	* For react native
		1. remove document.getElementById('language') and set default language to en

