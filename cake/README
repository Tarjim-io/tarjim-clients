1. mkdir tmp/cache/locale
2. touch tmp/cache/locale/locale_last_updated
3. chmod -R 777 tmp/cache/locale/
4. add following routes:
```
## Translation routes
Router::connect('/api/v1/get-latest-frontend-locale',
['controller' => 'tarjim', 'action' => 'getFrontendLocale', 'method' => 'GET']);
Router::connect('/api/v1/update-locale-cache',
['controller' => 'tarjim', 'action' => 'updateLocaleCache', 'method' => 'GET']);
```
5. add following to config/core:
```	
## Tarjim / Translations Load Tarjim.io translation client
require_once __DIR__.'/../vendors/tarjim_clients/cake/tarjim-client.php';
Configure::write('TARJIM_PROJECT_ID', YOUR_PROJECT_ID);
Configure::write('TARJIM_DEFAULT_NAMESPACE', YOUR_DEFAULT_NAMESPACE);
Configure::write('TARJIM_APIKEY', YOUR_API_KEY); 
```
6. update TARJIM_PROJECT_ID
7. add to app_controller:
 - Note: add project language cases to switch statement below

```
  /**
   *
   */
  public function setTranslation($namespace = 'backend', $language = 'en') {
    global $_T;

    ## Support older language keys
    switch($language) {
    case 'en':
    case 'eng':
    case 'english':
      $language = 'en';
      break;

    case 'fr':
    case 'fre':
    case 'french':
      $language = 'fr';
      break;

    default:
      $language = 'fr';
      break;

    }

    ## Set translation keys
    $Tarjim = new Tarjimclient();
    $_T = $Tarjim->getTranslations();
    ## for Cakex view translation (non-json encoded)
    $_T = $_T['results'][$namespace][$language];
    $_T['meta']['active_language'] = $language;

    $this->set('_T', $_T);
  }

public function beforeFilter() {
	// Skip get translations from tarjim for api calls
	if (!isset($_GET['skip_get_translations']) || '1' != $_GET['skip_get_translations']) {
## Set active language view variable
		$active_language = $this->Session->read('Config.language');
		$this->set('active_language', $active_language);
		$this->setTranslation(Configure::read('TARJIM_DEFAULT_NAMESPACE'), $active_language);
	}
}

```
Usage: _T()

### To use variables in translation value
* In tarjim.io add the variables you want as %%variable_name%%
* In view pass the key as an array
```
$key = [
	'key' => 'tarjim_key',
	'mappings' => [
		'var1' => 'var1 value',
	]
];

_T($key);
```
